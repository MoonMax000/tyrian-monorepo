import { Nunito_Sans } from 'next/font/google';
import { RTKQueryWrapper } from '@/components/RTKQueryWrapper';
import './globals.css';
import { AuthorizationModalProvider } from '@/context/AuthorizationModalContext';
import { ReactNode } from "react";
import { Analytics } from "@/utilts/Analytics";
import { headers } from 'next/headers'
import { getSiteName } from '@/utilts/getSiteName';

const nunitoSans = Nunito_Sans({
  weight: ['400', '500', '600', '700'],
  subsets: ['cyrillic', 'latin'],
});


export async function generateMetadata() {
  const headersList = await headers();
  const pathname = headersList.get('x-pathname') || '/';
  const cleanPath = pathname.split('?')[0];
  return {
    metadataBase: getSiteName(),
    title: 'Create Next App',
    description: 'Generated by create next app',
    alternates: {
      canonical: cleanPath,
    },
  };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <html lang='en' className={nunitoSans.className}>
      <RTKQueryWrapper>
        <body>
          <Analytics />
          <AuthorizationModalProvider>
            {children}
          </AuthorizationModalProvider>
        </body>
      </RTKQueryWrapper>
    </html>
  );
}
