# BASIC SERVICES ===========================

# Http port for auth service (by default 8002)
HTTP_PORT=8002

# Http port for balancer (by default 8080)
HTTP_PORT_EXT=8080

# Http port for balancer dashboard (by default 8090)
HTTP_PORT_EXT_TA=8090

# Service public urls (for correct generation confirmation links)
PUBLIC_EMAIL_CONFIRMATION_URL=http://localhost:8002/api/v1/auth/email/confirm
PUBLIC_PASSWORD_RESET_CONFIRMATION_URL=http://localhost:8002/front?token=
# This is for redirection after confirmation actions from email
PUBLIC_URL=http://localhost:8002/
PUBLIC_ERROR_URL=http://localhost:8002/

# PostgresQL settings
POSTGRES_HOST=localhost
POSTGRES_PORT=6555
POSTGRES_DB=aml-auth
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_MAX_IDLE_CONNS=
POSTGRES_MAX_OPEN_CONNS=
POSTGRES_CONN_MAX_LIFETIME=

# Session validation service
# Url format: redis[s]://[[username][:password]@][host][:port][/db-number]
SESSION_ID_REDIS_URL=redis://redis:6379/0
# User information cache (key is email)
# Url format: redis[s]://[[username][:password]@][host][:port][/db-number]
USER_INFO_REDIS_URL=redis://redis:6379/0

# Auth service api url (example: http://31.131.255.218:8080/api)
USER_SERVICE_BASE_URL=http://31.131.255.218:8080/api

RMQ_CONN_URL=amqp://guest:guest@rabbitmq:5672/
RMQ_MAIL_EXCHANGE=mail
# If true or yeas or y or 1 enable autocreate queue if exchange doesn't exists
RMQ_MAIL_EXCHANGE_AUTOCREATE_ENABLED=

RMQ_NOTIFY_EXCHANGE=notify
# If true or yeas or y or 1 enable autocreate queue if exchange doesn't exists
RMQ_NOTIFY_EXCHANGE_AUTOCREATE_ENABLED=

GLOBAL_RMQ_CONN_URL=amqp://rabbitmq:rabbitmq@interservice-message-broker:5673/
RMQ_STREAM_REQUEST_ROUTING_KEY=streaming_incoming

CDN_PUBLIC_URL=https://038ce6c9-bad5-4bb7-8da2-495126d7d90f.selstorage.ru
S3_AVATARS_BUCKET_NAME=images
S3_COVERS_BUCKET_NAME=covers

S3_REGION=ru-1
S3_ENDPOINT=test-streaming.s3.ru-1.storage.selcloud.ru
S3_ACCESS_KEY=Q3AM3UQ867SPQQA43P2F
S3_SECRET_ACCESS_KEY=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG

# Secret key like in django
SECRET_KEY=super_secret_key_very_long

REDIS_ADDR=redis:6379
REDIS_DB=0

# Github application token (with read permission)
GITHUB_TOKEN=<github-token-for-build-dockerfile-with-private-modules>

# Additional ports for other microservices
HTTP_RECOMMEND_SERVICE_PORT=8007
