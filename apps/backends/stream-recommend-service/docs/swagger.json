{
    "swagger": "2.0",
    "info": {
        "description": "This is an streaming API",
        "title": "Streaming API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/categories": {
            "get": {
                "description": "Возвращает список всех категорий video (замоканные данные)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Получить все категории",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "description": "Returns paginated list of all streamer channels with subscriber counts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get all streamer channels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tag name",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1, min: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort type: normal or recommended (default: normal)",
                        "name": "sort_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with pagination",
                        "schema": {
                            "$ref": "#/definitions/types.ChannelsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/batch": {
            "post": {
                "description": "Returns channel information for given channel IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get multiple channels",
                "parameters": [
                    {
                        "description": "Channel IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ChannelIdsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ChannelsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/me/subscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Subscribe authenticated user to a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Subscribe to channel",
                "parameters": [
                    {
                        "description": "Subscribe Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.SubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/me/subscribers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns list of users subscribed to the authenticated streamer's channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get channel subscribers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (username or subscriber_count)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort direction (asc or desc)",
                        "name": "sort_dir",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SubscriberListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/me/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns list of channels the user is subscribed to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get user's subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SubscriptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/me/unsubscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unsubscribe authenticated user from a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Unsubscribe from channel",
                "parameters": [
                    {
                        "description": "Unsubscribe Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UnsubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/search": {
            "get": {
                "description": "Searches for live streamer channels by substring in category, tag, stream name, or username. Returns up to 10 best matches.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Search streamer channels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (by category, tag, stream name, or username)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching channels with match type",
                        "schema": {
                            "$ref": "#/definitions/types.SearchChannelsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or empty query",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/channels/{id}": {
            "get": {
                "description": "Returns single channel information with subscriber count. Channel can be looked up by either ID or username.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get channel by ID or username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID or username",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.FailureErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Returns list of all unique tags used in live streams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all unique stream tags",
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Category": {
            "description": "Информация о категории канала",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "types.Channel": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "cover_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "donation_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "stream": {
                    "description": "Categories      []string    `json:\"categories\"`",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StreamData"
                        }
                    ]
                },
                "subscribed": {
                    "type": "boolean"
                },
                "subscriber_count": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.ChannelIdsRequest": {
            "type": "object",
            "properties": {
                "channel_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.ChannelResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/types.Channel"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.ChannelsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Channel"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.FailureErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.FailureResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.PaginationResponse": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "types.SearchChannelsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.SearchResult"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.SearchResult": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/types.Channel"
                },
                "matched_on": {
                    "description": "\"category\", \"tag\", \"stream_name\", \"username\"",
                    "type": "string"
                },
                "score": {
                    "description": "опционально: для ранжирования",
                    "type": "integer"
                }
            }
        },
        "types.StreamData": {
            "type": "object",
            "properties": {
                "is_online": {
                    "type": "boolean"
                },
                "last_updated_at": {
                    "type": "integer"
                },
                "stream_category": {
                    "type": "string"
                },
                "stream_name": {
                    "type": "string"
                },
                "stream_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translation_url": {
                    "type": "string"
                },
                "viewer_count": {
                    "type": "integer"
                }
            }
        },
        "types.SubscribeRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                }
            }
        },
        "types.Subscriber": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_streamer": {
                    "type": "boolean"
                },
                "is_subscribed": {
                    "type": "boolean"
                },
                "stream": {
                    "$ref": "#/definitions/types.StreamData"
                },
                "subscriber_count": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.SubscriberListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Subscriber"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.SubscriptionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.UnsubscribeRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "description": "Сессионная аутентификация через куку sessionid",
            "type": "apiKey",
            "name": "sessionid",
            "in": "cookie"
        }
    }
}